name: 'Build Android App'

inputs:
  version_name:
    description: 'Version name for the build'
    required: true
  version_code:
    description: 'Version code for the build'
    required: false
    default: '1'
  build_type:
    description: 'Build type: debug or release'
    required: true
outputs:
  apk_path:
    description: 'Path to the built APK'
    value: ${{ jobs.build.outputs.apk_path }}
  bundle_path:
    description: 'Path to the built AAB bundle'
    value: ${{ jobs.build.outputs.bundle_path }}

runs:
  using: 'composite'
  steps:
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: "17"
        distribution: "adopt"
        cache: "gradle"

    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.23.3"

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 12266719

    - name: NDK Cache
      id: ndk-cache
      uses: actions/cache@v3
      with:
        path: /usr/local/lib/android/sdk/ndk
        key: ndk-cache-23.1.7779620

    - name: Setup NDK
      run: /usr/local/lib/android/sdk/cmdline-tools/16.0/bin/sdkmanager --install "ndk;23.1.7779620"

    - name: Install gomobile
      run: go install golang.org/x/mobile/cmd/gomobile@v0.0.0-20230531173138-3c911d8e3eda

    - name: Build NetBird Go library
      run: PATH=$PATH:$(go env GOPATH)/bin bash -x build-android-lib.sh
      env:
        ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/23.1.7779620

    - name: Build APK and Bundle
      run: |
        BUILD_TYPE=${{ inputs.build_type == 'release' && 'Release' || 'Debug' }}
         VERSION_CODE_ARG=""
        
        if [ -n "${{ inputs.version_code }}" ]; then
          VERSION_CODE_ARG="-PversionCode=${{ inputs.version_code }}"
        fi
    
        ./gradlew --no-daemon assemble${BUILD_TYPE} bundle${BUILD_TYPE} -PversionName="${{ inputs.version_name }}" $VERSION_CODE_ARG        

    - name: Rename artifacts
      run: |
        set -e
        # Determine Gradle build type folder
        if [[ "${{ inputs.build_type }}" == "release" ]]; then
        BUILD_TYPE_FOLDER="release"
        else
        BUILD_TYPE_FOLDER="debug"
        fi
        
        mv app/build/outputs/apk/${BUILD_TYPE_FOLDER}/app-${BUILD_TYPE_FOLDER}.apk app/build/outputs/apk/${BUILD_TYPE_FOLDER}/netbird-${{ inputs.version_name }}.apk
        mv app/build/outputs/bundle/${BUILD_TYPE_FOLDER}/app-${BUILD_TYPE_FOLDER}.aab app/build/outputs/bundle/${BUILD_TYPE_FOLDER}/netbird-${{ inputs.version_name }}.aab

    - name: Set build info
      id: build-info
      run: |
        BUILD_TYPE=${{ inputs.build_type }}
        echo "apk_path=app/build/outputs/apk/${BUILD_TYPE}/netbird-${{ inputs.version_name }}.apk" >> $GITHUB_OUTPUT
        echo "bundle_path=app/build/outputs/bundle/${BUILD_TYPE}/netbird-${{ inputs.version_name }}.aab" >> $GITHUB_OUTPUT